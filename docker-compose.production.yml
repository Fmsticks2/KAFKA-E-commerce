# Production Docker Compose Configuration for External Deployment
# Kafka E-commerce Order Processing System with Vercel Frontend Integration

version: '3.8'

services:
  # Kafka Infrastructure
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper-production
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    restart: unless-stopped
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka-production
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: 0.0.0.0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "9101:9101"
    volumes:
      - kafka_data:/var/lib/kafka/data
    restart: unless-stopped
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5

  # E-commerce Application with CORS enabled
  ecommerce-app:
    image: kafka-ecommerce:latest
    container_name: ecommerce-app-production
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=INFO
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ORDER_SERVICE_PORT=5011
      - PAYMENT_SERVICE_PORT=6002
      - INVENTORY_SERVICE_PORT=5003
      - NOTIFICATION_SERVICE_PORT=5004
      - ORCHESTRATOR_SERVICE_PORT=5005
      # CORS Configuration for Vercel Frontend
      - CORS_ENABLED=true
      - CORS_ORIGINS=https://*.vercel.app,https://your-frontend-domain.vercel.app
      - CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - CORS_HEADERS=Content-Type,Authorization,X-Requested-With
      # External Access Configuration
      - EXTERNAL_HOST=${EXTERNAL_HOST:-localhost}
      - API_BASE_URL=${API_BASE_URL:-http://localhost:5005}
    ports:
      - "5011:5011"  # Order Service
      - "6002:6002"  # Payment Service
      - "5003:5003"  # Inventory Service
      - "5004:5004"  # Notification Service
      - "5005:5005"  # Orchestrator & Monitoring
    volumes:
      - app_logs:/app/logs
      - app_data:/app/data
    restart: unless-stopped
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Kafka UI for monitoring with external access
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui-production
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: production
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      # Security settings for production
      AUTH_TYPE: "LOGIN_FORM"
      SPRING_SECURITY_USER_NAME: ${KAFKA_UI_USERNAME:-admin}
      SPRING_SECURITY_USER_PASSWORD: ${KAFKA_UI_PASSWORD:-kafka-admin-2024}
    ports:
      - "8081:8080"
    restart: unless-stopped
    networks:
      - kafka-network

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: nginx-production
    depends_on:
      - ecommerce-app
      - kafka-ui
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/production.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    restart: unless-stopped
    networks:
      - kafka-network
    environment:
      - NGINX_HOST=${EXTERNAL_HOST:-localhost}
      - NGINX_PORT=80

volumes:
  zookeeper_data:
    driver: local
  zookeeper_logs:
    driver: local
  kafka_data:
    driver: local
  app_logs:
    driver: local
  app_data:
    driver: local

networks:
  kafka-network:
    driver: bridge
    name: kafka-ecommerce-production
    ipam:
      config:
        - subnet: 172.20.0.0/16